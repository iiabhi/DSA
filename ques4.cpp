#include <iostream>
using namespace std;

int longestSubarray(vector<int>& nums) {
        int n = nums.size();
        if(n==0) return 0;
        int maxVal = INT_MIN;
        for(int i=0; i<n; i++){
            maxVal = max(maxVal, nums[i]);
        }

        
        
        int result = 0;
        int j = 1;
        int i = 0;
        while(j<n && i<n){
            if(nums[i]==maxVal){
                int count = 1;
                while(j<n && nums[i]== nums[j] ){
                j++;
                count++;
                }
                result = max(result, count);
            }
            
            i=j;
            j++;
        }
        return result;
        
    }

int main()
{
    vector<int> vec = {395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,395808,470030,470030,470030,470030,470030,470030,470030,470030,470030,470030,470030,470030,470030,470030,470030,470030,470030,470030,470030,470030,470030,470030,470030,470030,153490,330001,330001,330001,330001,330001,330001,330001,37284,470030,470030,470030,470030,470030,470030,156542,226743};
    cout<<longestSubarray(vec)<<endl;
    return 0;
}